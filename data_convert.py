# -*- coding: utf-8 -*-
"""
Created on Thursday, 2018/10/11
This script is to convert the txt annotation files generated by BBox-Label-Tool 
to appropriate format needed by YOLO 

@author: Yuning Zhu
Email: zhuyunin@gmail.com
"""

import os
from os import walk, getcwd
from PIL import Image
from shutil import copyfile

classes = ["stump_gunner", "snowflake", "tesla", "laser", "dj", "teleport", "tina", "petey", "compy", "bruno", "red_boss", "Bomb"]

def convert(size, box):
    dw = 1./size[0]
    dh = 1./size[1]
    x = (box[0] + box[1])/2.0
    y = (box[2] + box[3])/2.0
    w = box[1] - box[0]
    h = box[3] - box[2]
    x = x*dw
    w = w*dw
    y = y*dh
    h = h*dh
    return (x,y,w,h)

def find_cls_id(cls):
    if cls not in classes:
        exit(0)
    cls_id = classes.index(cls)
    return cls_id

""" Configure Paths"""   
mypath = "./data_pre/BBox-Label-Tool-large-img/Labels/117/"
outpath = "./data_pre/converted/117/"
img_input = "./data_pre/BBox-Label-Tool-large-img/Images/117/"
wd = getcwd()
list_path = "./data_pre/image_list.txt"

# for n in range(len(classes)):
#     if not os.path.exists(outpath + str(n)):
#         os.mkdir(outpath + str(n))

""" Get input text file list """
txt_name_list = []
for (dirpath, dirnames, filenames) in walk(mypath):
    txt_name_list.extend(filenames)
print "Input texts include:"
print txt_name_list

""" Process """
for txt_name in txt_name_list:    
    """ Open input text files """
    txt_path = mypath + txt_name
    print "Input:" + txt_path 
    with open(txt_path, 'r') as f:
        for lines in f:
            """ Convert the data to YOLO format """
            elems = lines.split(' ')
            if len(elems) == 1:
                continue
            xmin = elems[0]
            xmax = elems[2]
            ymin = elems[1]
            ymax = elems[3]
            cls_id = str(find_cls_id(elems[4].split("\n")[0]))
            #print cls_id
            box = (float(xmin), float(xmax), float(ymin), float(ymax))
            normed_format = convert((1920,1080), box) #fixed size

            txt_outpath = outpath + txt_name
            """ Open output text files """
            print "Output:" + txt_outpath
            with open(txt_outpath, "a") as ff:
                ff.write(str(cls_id) + " " + " ".join([str(a) for a in normed_format]) + '\n')
        """ Copy pictures """
        src = img_input + txt_name.split(".")[0] + ".jpg"
        dst = outpath + txt_name.split(".")[0] + ".jpg"
        copyfile(src, dst)
        """ Save those images into list"""
        with open(list_path, 'a') as list_file:
            list_file.write(dst + "\n")
